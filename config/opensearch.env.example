# Used in various services to define the connection to the OpenSearch document store.
# Whether or not Malcolm will start and use its own local OpenSearch instance as its
#   primary data store. Set to 'false' if you're connecting to another OpenSearch
#   cluster, in which case the other environment variables in this section must also
#   be set with the connection parameters.
OPENSEARCH_LOCAL=true
# URL for connecting to OpenSearch instance. When using Malcolm's internal instance
#   of OpenSearch (i.e., OPENSEARCH_LOCAL is 'true') this should be
#   'http://opensearch:9200', otherwise specify the primary remote instance URL
#   in the format 'protocol://host:port'.
OPENSEARCH_URL=http://opensearch:9200
# Used when OPENSEARCH_LOCAL is 'false', the cURL-formatted config file contains login
#   credentials for the primary OpenSearch instance. It can be generated for you by the
#   ./scripts/auth_setup script. The notable parameters expected from this file would be
#   user (with a "user:password" value) and "insecure" (if the certificate verification
#   setting below is 'false'). See cURL config file format at
#   https://everything.curl.dev/cmdline/configfile. This file is bind mounted locally
#   from .opensearch.primary.curlrc as /var/local/curlrc/.opensearch.primary.curlrc
OPENSEARCH_CREDS_CONFIG_FILE=/var/local/curlrc/.opensearch.primary.curlrc
# Whether or not connections to the primary remote OpenSearch instance require full
#  TLS certificate validation for the connection (this may fail if using self-signed
#  certificates).
OPENSEARCH_SSL_CERTIFICATE_VERIFICATION=false
# Whether or not Malcolm's Logstash instance will forward logs to a secondary remote
#   OpenSearch instance in addition to the (local or remote) primary instance.
OPENSEARCH_SECONDARY=false
# URL for connecting to the secondary remote OpenSearch instance, specified
#   in the format 'protocol://host:port'.
OPENSEARCH_SECONDARY_URL=
# Used when OPENSEARCH_SECONDARY is 'true', the cURL-formatted config file contains login
#   credentials for the secondary OpenSearch instance. The comments describing
#   OPENSEARCH_CREDS_CONFIG_FILE above also apply here. This file is bind mounted locally
#   from .opensearch.secondary.curlrc as /var/local/curlrc/.opensearch.secondary.curlrc
OPENSEARCH_SECONDARY_CREDS_CONFIG_FILE=/var/local/curlrc/.opensearch.secondary.curlrc
# Whether or not connections to the secondary remote OpenSearch instance require full
#  TLS certificate validation for the connection (this may fail if using self-signed
#  certificates).
OPENSEARCH_SECONDARY_SSL_CERTIFICATE_VERIFICATION=false
# OpenSearch memory allowance and other Java options
OPENSEARCH_JAVA_OPTS=-server -Xms10g -Xmx10g -Xss256k -XX:-HeapDumpOnOutOfMemoryError -Djava.security.egd=file:/dev/./urandom -Dlog4j.formatMsgNoLookups=true

logger.level=WARN
bootstrap.memory_lock=true
MAX_LOCKED_MEMORY=unlimited
discovery.type=single-node
cluster.routing.allocation.disk.threshold_enabled=false
cluster.routing.allocation.node_initial_primaries_recoveries=8
indices.query.bool.max_clause_count=4096
path.repo=/opt/opensearch/backup
